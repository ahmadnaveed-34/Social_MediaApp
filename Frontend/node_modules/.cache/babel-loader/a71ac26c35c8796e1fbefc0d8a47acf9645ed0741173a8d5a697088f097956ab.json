{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmad12\\\\Documents\\\\Vividly\\\\Frontend\\\\src\\\\Components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport vividlyContext from \"../Context/vividlyContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport Avatar from \"../Images/Avatar.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const navigate = useNavigate();\n  const context = useContext(vividlyContext);\n  const {\n    deleteUserAccount\n  } = context;\n  const ENDPOINT = process.env.REACT_APP_ENDPOINT;\n  const [uSetting, setUSetting] = useState(\"\");\n  const userSetting = async () => {\n    const id = localStorage.getItem(\"id\");\n    const parsedId = JSON.parse(id);\n    const token = localStorage.getItem(\"token\");\n    const parsedToken = JSON.parse(token);\n    try {\n      const response = await fetch(`${ENDPOINT}/api/user/userSetting/${parsedId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": parsedToken\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        setUSetting(data);\n      } else {\n        console.log(\"Error\");\n      }\n    } catch (error) {\n      console.log(\"Error:\", error.message);\n    }\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // const handleChange = (e) => {\n  //     const { name, value } = e.target;\n  //     setFormData((prevData) => ({\n  //         ...prevData,\n  //         [name]: value,\n  //     }));\n  // };\n\n  // const handleFileChange = (e) => {\n  //     const file = e.target.files[0];\n  //     setFormData((prevData) => ({\n  //         ...prevData,\n  //         profilePicture: URL.createObjectURL(file),\n  //     }));\n  // };\n\n  // const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     console.log('Updated User Data:', formData);\n  //     setIsModalOpen(false);\n  // };\n\n  useEffect(() => {\n    userSetting();\n  }, []);\n  const [theme, setTheme] = useState(\"light\");\n  const handleThemeChange = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen sm:pl-72 sm:pt-24 max-w-8xl mx-auto p-6 bg-gray-50\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"0qG+x5wUD5sVqjTaW3EV85asjJQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useNavigate","vividlyContext","FontAwesomeIcon","faEdit","Avatar","jsxDEV","_jsxDEV","Settings","_s","navigate","context","deleteUserAccount","ENDPOINT","process","env","REACT_APP_ENDPOINT","uSetting","setUSetting","userSetting","id","localStorage","getItem","parsedId","JSON","parse","token","parsedToken","response","fetch","method","headers","data","json","success","console","log","error","message","isModalOpen","setIsModalOpen","theme","setTheme","handleThemeChange","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ahmad12/Documents/Vividly/Frontend/src/Components/Settings.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport vividlyContext from \"../Context/vividlyContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Avatar from \"../Images/Avatar.jpeg\";\r\n\r\nconst Settings = () => {\r\n  const navigate = useNavigate();\r\n  const context = useContext(vividlyContext);\r\n  const { deleteUserAccount } = context;\r\n  const ENDPOINT = process.env.REACT_APP_ENDPOINT;\r\n\r\n  const [uSetting, setUSetting] = useState(\"\");\r\n  const userSetting = async () => {\r\n    const id = localStorage.getItem(\"id\");\r\n    const parsedId = JSON.parse(id);\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const parsedToken = JSON.parse(token);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${ENDPOINT}/api/user/userSetting/${parsedId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\": parsedToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setUSetting(data);\r\n      } else {\r\n        console.log(\"Error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error:\", error.message);\r\n    }\r\n  };\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // const handleChange = (e) => {\r\n  //     const { name, value } = e.target;\r\n  //     setFormData((prevData) => ({\r\n  //         ...prevData,\r\n  //         [name]: value,\r\n  //     }));\r\n  // };\r\n\r\n  // const handleFileChange = (e) => {\r\n  //     const file = e.target.files[0];\r\n  //     setFormData((prevData) => ({\r\n  //         ...prevData,\r\n  //         profilePicture: URL.createObjectURL(file),\r\n  //     }));\r\n  // };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //     e.preventDefault();\r\n  //     console.log('Updated User Data:', formData);\r\n  //     setIsModalOpen(false);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    userSetting();\r\n  }, []);\r\n\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const handleThemeChange = () => {\r\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen sm:pl-72 sm:pt-24 max-w-8xl mx-auto p-6 bg-gray-50\"></div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,OAAO,GAAGd,UAAU,CAACK,cAAc,CAAC;EAC1C,MAAM;IAAEU;EAAkB,CAAC,GAAGD,OAAO;EACrC,MAAME,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;EAE/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,EAAE,CAAC;IAE/B,MAAMM,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMK,WAAW,GAAGH,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;IAErC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGhB,QAAQ,yBAAyBU,QAAQ,EAAE,EAC9C;QACEO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAAEJ;QAChB;MACF,CACF,CAAC;MACD,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBhB,WAAW,CAACc,IAAI,CAAC;MACnB,CAAC,MAAM;QACLG,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,KAAK,CAACC,OAAO,CAAC;IACtC;EACF,CAAC;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACdqB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAM4C,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACElC,OAAA;IAAKqC,SAAS,EAAC;EAAiE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE3F,CAAC;AAACvC,EAAA,CAzEID,QAAQ;EAAA,QACKP,WAAW;AAAA;AAAAgD,EAAA,GADxBzC,QAAQ;AA2Ed,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}